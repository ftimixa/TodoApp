{"ast":null,"code":"import { ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY } from '../../constants';\nimport { load } from 'redux-localstorage-simple';\nlet TASKS = load({\n  namespace: 'todo-list'\n});\n\nif (!TASKS || !TASKS.tasks || !TASKS.tasks.length) {\n  TASKS = {\n    tasks: []\n  };\n}\n\nconst tasks = (state = TASKS.tasks, {\n  id,\n  description,\n  executor,\n  priority,\n  type\n}) => {\n  switch (type) {\n    case ADD_TASK:\n      return [...state, {\n        id,\n        description,\n        executor,\n        priority: +priority\n      }];\n\n    case REMOVE_TASK:\n      return [...state].filter(task => task.id !== id);\n\n    case INCREASE_PRIORTY:\n      return [...state].map(task => {\n        if (task.id === id) {\n          task.priority = ++task.priority;\n        }\n\n        return task;\n      });\n\n    case DECREASE_PRIORITY:\n      return [...state].map(task => {\n        if (task.id === id) {\n          task.priority = --task.priority;\n        }\n\n        return task;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/APP/frontend/src/TodoApp/reducers/tasks.js"],"names":["ADD_TASK","REMOVE_TASK","INCREASE_PRIORTY","DECREASE_PRIORITY","load","TASKS","namespace","tasks","length","state","id","description","executor","priority","type","filter","task","map"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,iBAAlD,QAA0E,iBAA1E;AACA,SAAQC,IAAR,QAAmB,2BAAnB;AAEA,IAAIC,KAAK,GAAGD,IAAI,CAAC;AAAEE,EAAAA,SAAS,EAAE;AAAb,CAAD,CAAhB;;AAEA,IAAI,CAACD,KAAD,IAAU,CAACA,KAAK,CAACE,KAAjB,IAAyB,CAACF,KAAK,CAACE,KAAN,CAAYC,MAA1C,EAAkD;AAChDH,EAAAA,KAAK,GAAG;AACNE,IAAAA,KAAK,EAAE;AADD,GAAR;AAGD;;AAED,MAAMA,KAAK,GAAG,CAACE,KAAK,GAAEJ,KAAK,CAACE,KAAd,EAAqB;AAAEG,EAAAA,EAAF;AAAMC,EAAAA,WAAN;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA;AAAvC,CAArB,KAAuE;AACnF,UAAQA,IAAR;AACE,SAAKd,QAAL;AACE,aAAO,CACL,GAAGS,KADE,EACK;AACRC,QAAAA,EADQ;AAERC,QAAAA,WAFQ;AAGRC,QAAAA,QAHQ;AAIRC,QAAAA,QAAQ,EAAE,CAACA;AAJH,OADL,CAAP;;AAQF,SAAKZ,WAAL;AACE,aAAO,CAAC,GAAGQ,KAAJ,EAAWM,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAtC,CAAP;;AACF,SAAKR,gBAAL;AACE,aAAO,CAAC,GAAGO,KAAJ,EAAWQ,GAAX,CAAeD,IAAI,IAAI;AAC5B,YAAGA,IAAI,CAACN,EAAL,KAAYA,EAAf,EAAmB;AACjBM,UAAAA,IAAI,CAACH,QAAL,GAAgB,EAAEG,IAAI,CAACH,QAAvB;AACD;;AACD,eAAOG,IAAP;AACD,OALM,CAAP;;AAMF,SAAKb,iBAAL;AACE,aAAO,CAAC,GAAGM,KAAJ,EAAWQ,GAAX,CAAeD,IAAI,IAAI;AAC5B,YAAGA,IAAI,CAACN,EAAL,KAAYA,EAAf,EAAmB;AACjBM,UAAAA,IAAI,CAACH,QAAL,GAAgB,EAAEG,IAAI,CAACH,QAAvB;AACD;;AACD,eAAOG,IAAP;AACD,OALM,CAAP;;AAMF;AACE,aAAOP,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeF,KAAf","sourcesContent":["import { ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY} from '../../constants';\r\nimport {load} from 'redux-localstorage-simple';\r\n\r\nlet TASKS = load({ namespace: 'todo-list' });\r\n\r\nif (!TASKS || !TASKS.tasks|| !TASKS.tasks.length) {\r\n  TASKS = {\r\n    tasks: [],\r\n  }\r\n}\r\n\r\nconst tasks = (state= TASKS.tasks, { id, description, executor, priority, type }) => {\r\n  switch (type) {\r\n    case ADD_TASK :\r\n      return [\r\n        ...state, {\r\n          id,\r\n          description,\r\n          executor,\r\n          priority: +priority,\r\n        }\r\n      ];\r\n    case REMOVE_TASK :\r\n      return [...state].filter(task => task.id !== id);\r\n    case INCREASE_PRIORTY :\r\n      return [...state].map(task => {\r\n        if(task.id === id) {\r\n          task.priority = ++task.priority;\r\n        }\r\n        return task;\r\n      });\r\n    case DECREASE_PRIORITY :\r\n      return [...state].map(task => {\r\n        if(task.id === id) {\r\n          task.priority = --task.priority;\r\n        }\r\n        return task;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tasks;\r\n"]},"metadata":{},"sourceType":"module"}