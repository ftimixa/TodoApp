{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grechka_Mi\\\\Documents\\\\react-express-example-master\\\\frontend\\\\src\\\\TodoApp\\\\containers\\\\todoBody.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUsers, loadTasks, saveTask, removeTask, changePriority } from '../reducers/reducers';\nimport { tasksRequested } from '../actions/actionCreator';\nimport TodoInput from '../components/todoInput/todoInput';\nimport TodoList from '../components/todoList/todoList';\nimport AppTitle from '../components/appTitle/appTitle';\nimport classes from './todoBody_style';\n\nconst TodoBody = () => {\n  const users = useSelector(state => state.usersReducer.users);\n  const userError = useSelector(state => state.usersReducer.error);\n  const tasks = useSelector(state => state.tasksReducer.tasks);\n  const tasksLoading = useSelector(state => state.tasksReducer.loaded);\n  const tasksError = useSelector(state => state.tasksReducer.error);\n  const dispatch = useDispatch();\n\n  const onAddTask = task => {\n    dispatch(saveTask(task));\n  };\n\n  const onChangePriority = (id, nameAction) => {\n    dispatch(changePriority(id, nameAction));\n  };\n\n  const onRemoveTask = id => {\n    dispatch(removeTask(id));\n  };\n\n  useEffect(() => {\n    dispatch(loadUsers());\n    dispatch(tasksRequested());\n    dispatch(loadTasks());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.todoBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppTitle, {\n    title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoInput, {\n    error: userError,\n    users: users,\n    addTask: onAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), tasksLoading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0437\\u0430\\u0434\\u0430\\u0447\") : tasksError ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 57\n    }\n  }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\") : /*#__PURE__*/React.createElement(TodoList, {\n    tasks: tasks,\n    changePriority: onChangePriority,\n    removeTask: onRemoveTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 81\n    }\n  }));\n};\n\nexport default TodoBody;","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/containers/todoBody.js"],"names":["React","useEffect","useDispatch","useSelector","loadUsers","loadTasks","saveTask","removeTask","changePriority","tasksRequested","TodoInput","TodoList","AppTitle","classes","TodoBody","users","state","usersReducer","userError","error","tasks","tasksReducer","tasksLoading","loaded","tasksError","dispatch","onAddTask","task","onChangePriority","id","nameAction","onRemoveTask","todoBody"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,UAAxC,EAAoDC,cAApD,QAAyE,sBAAzE;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAErB,QAAMC,KAAK,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBF,KAA7B,CAAzB;AACA,QAAMG,SAAS,GAAGf,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBE,KAA7B,CAA7B;AACA,QAAMC,KAAK,GAAGjB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACK,YAAN,CAAmBD,KAA7B,CAAzB;AACA,QAAME,YAAY,GAAGnB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACK,YAAN,CAAmBE,MAA7B,CAAhC;AACA,QAAMC,UAAU,GAAGrB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACK,YAAN,CAAmBF,KAA7B,CAA9B;AAEA,QAAMM,QAAQ,GAAGvB,WAAW,EAA5B;;AAEA,QAAMwB,SAAS,GAAIC,IAAD,IAAU;AAC1BF,IAAAA,QAAQ,CAACnB,QAAQ,CAACqB,IAAD,CAAT,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,CAACC,EAAD,EAAKC,UAAL,KAAoB;AAC3CL,IAAAA,QAAQ,CAACjB,cAAc,CAACqB,EAAD,EAAKC,UAAL,CAAf,CAAR;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIF,EAAD,IAAQ;AAC3BJ,IAAAA,QAAQ,CAAClB,UAAU,CAACsB,EAAD,CAAX,CAAR;AACD,GAFD;;AAIA5B,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,QAAQ,CAACrB,SAAS,EAAV,CAAR;AACAqB,IAAAA,QAAQ,CAAChB,cAAc,EAAf,CAAR;AACAgB,IAAAA,QAAQ,CAACpB,SAAS,EAAV,CAAR;AACD,GAJQ,EAIN,CAACoB,QAAD,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACmB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,qEAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEd,SAAlB;AAA6B,IAAA,KAAK,EAAEH,KAApC;AAA2C,IAAA,OAAO,EAAEW,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGJ,YAAY,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAAF,GAAyBE,UAAU,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAAF,gBAA0B,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAwB,IAAA,cAAc,EAAEQ,gBAAxC;AAA0D,IAAA,UAAU,EAAEG,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH5E,CADF;AAOD,CAnCD;;AAqCA,eAAejB,QAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {loadUsers, loadTasks, saveTask, removeTask, changePriority} from '../reducers/reducers';\r\nimport { tasksRequested } from '../actions/actionCreator';\r\n\r\nimport TodoInput from '../components/todoInput/todoInput';\r\nimport TodoList from '../components/todoList/todoList';\r\nimport AppTitle from '../components/appTitle/appTitle';\r\n\r\nimport classes from './todoBody_style';\r\n\r\n\r\nconst TodoBody = () => {\r\n  \r\n  const users = useSelector(state => state.usersReducer.users);\r\n  const userError = useSelector(state => state.usersReducer.error);\r\n  const tasks = useSelector(state => state.tasksReducer.tasks);\r\n  const tasksLoading = useSelector(state => state.tasksReducer.loaded);\r\n  const tasksError = useSelector(state => state.tasksReducer.error);\r\n  \r\n  const dispatch = useDispatch();\r\n  \r\n  const onAddTask = (task) => {\r\n    dispatch(saveTask(task))\r\n  }\r\n\r\n  const onChangePriority = (id, nameAction) => {\r\n    dispatch(changePriority(id, nameAction))\r\n  }\r\n\r\n  const onRemoveTask = (id) => {\r\n    dispatch(removeTask(id))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadUsers())\r\n    dispatch(tasksRequested())\r\n    dispatch(loadTasks())\r\n  }, [dispatch])\r\n    \r\n  return (\r\n    <div className={classes.todoBody}>\r\n      <AppTitle title='Список задач' /> \r\n      <TodoInput error={userError} users={users} addTask={onAddTask} />\r\n      {tasksLoading? <p>Загрузка задач</p>: tasksError? <p>Ошибка загрузки</p>: <TodoList tasks={tasks} changePriority={onChangePriority} removeTask={onRemoveTask} />} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoBody;"]},"metadata":{},"sourceType":"module"}