{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grechka_Mi\\\\Documents\\\\react-express-example-master\\\\frontend\\\\src\\\\TodoApp\\\\containers\\\\todoBody.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTask, loadUsers } from '../actions/actionCreator';\nimport TodoInput from '../components/todoInput/todoInput';\nimport TodoList from '../components/todoList/todoList';\nimport AppTitle from '../components/appTitle/appTitle';\nimport classes from './todoBody_style';\n\nconst TodoBody = () => {\n  const users = useSelector(state => state.users);\n  const tasks = useSelector(state => state.tasks);\n  const dispatch = useDispatch();\n\n  const onAddTask = task => {\n    dispatch(addTask(task));\n  };\n\n  useEffect(() => {\n    return dispatch(loadUsers);\n  }, []);\n  const isTasksExist = tasks && tasks.length > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.todoBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppTitle, {\n    title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoInput, {\n    users: users,\n    addTask: onAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), isTasksExist && /*#__PURE__*/React.createElement(TodoList, {\n    tasksList: tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default TodoBody;","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/containers/todoBody.js"],"names":["React","useEffect","useDispatch","useSelector","addTask","loadUsers","TodoInput","TodoList","AppTitle","classes","TodoBody","users","state","tasks","dispatch","onAddTask","task","isTasksExist","length","todoBody"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAAQC,OAAR,EAAiBC,SAAjB,QAAiC,0BAAjC;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAKrB,QAAMC,KAAK,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AACA,QAAME,KAAK,GAAGV,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAzB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,SAAS,GAAIC,IAAD,IAAU;AAC1BF,IAAAA,QAAQ,CAACV,OAAO,CAACY,IAAD,CAAR,CAAR;AACD,GAFD;;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACf,WAAOa,QAAQ,CAACT,SAAD,CAAf;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMY,YAAY,GAAGJ,KAAK,IAAIA,KAAK,CAACK,MAAN,GAAe,CAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACU,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,qEAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAER,KAAlB;AAAyB,IAAA,OAAO,EAAEI,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGE,YAAY,iBAAI,oBAAC,QAAD;AACf,IAAA,SAAS,EAAEJ,KADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHnB,CADF;AASD,CA3BD;;AA6BA,eAAeH,QAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {addTask, loadUsers} from '../actions/actionCreator';\r\n\r\nimport TodoInput from '../components/todoInput/todoInput';\r\nimport TodoList from '../components/todoList/todoList';\r\nimport AppTitle from '../components/appTitle/appTitle';\r\n\r\nimport classes from './todoBody_style';\r\nconst TodoBody = () => {\r\n\r\n  \r\n\r\n\r\n  const users = useSelector((state) => state.users);\r\n  const tasks = useSelector((state) => state.tasks);\r\n  const dispatch = useDispatch();\r\n  \r\n  const onAddTask = (task) => {\r\n    dispatch(addTask(task))\r\n  }\r\n  useEffect(() => {\r\n   return dispatch(loadUsers)\r\n  }, [])\r\n\r\n  const isTasksExist = tasks && tasks.length > 0;\r\n    \r\n  return (\r\n    <div className={classes.todoBody}>\r\n      <AppTitle title='Список задач' />\r\n      <TodoInput users={users} addTask={onAddTask} />\r\n      {isTasksExist && <TodoList\r\n        tasksList={tasks}\r\n      />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoBody;"]},"metadata":{},"sourceType":"module"}