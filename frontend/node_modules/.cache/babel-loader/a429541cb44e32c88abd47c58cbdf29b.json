{"ast":null,"code":"import { SET_TASKS, SET_USERS } from '../../constants';\nimport { setUsers, setTasks, errUsers } from '../actions/actionCreator';\nexport const usersReducer = (state = {}, {\n  type,\n  users\n}) => {\n  switch (type) {\n    case SET_USERS:\n      return users;\n\n    default:\n      return state;\n  }\n};\nexport const tasksReducer = (state = [], {\n  type,\n  tasks\n}) => {\n  switch (type) {\n    case SET_TASKS:\n      return tasks;\n\n    default:\n      return state;\n  }\n};\nexport const loadUsers = () => async dispatch => {\n  await fetch(\"/api/users\").then(res => res.json()).then(users => dispatch(setUsers(users))).catch(err => dispatch(errUsers(err)));\n};\nexport const loadTasks = () => async dispatch => {\n  const tasks = await fetch(\"/api/tasks\").then(res => res.json());\n  dispatch(setTasks(tasks));\n};\nexport const saveTask = task => async dispatch => {\n  await fetch(\"/api/tasks\", {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  }).then(res => res.json()).then(res => dispatch(setTasks(res)));\n};\nexport const changePriority = (id, nameAction) => async dispatch => {\n  await fetch(`/api/tasks/${id}`, {\n    method: \"PUT\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      nameAction\n    })\n  }).then(res => res.json()).then(res => dispatch(setTasks(res)));\n};\nexport const removeTask = id => async dispatch => {\n  await fetch(`/api/tasks/${id}`, {\n    method: \"DELETE\"\n  }).then(res => res.json()).then(res => dispatch(setTasks(res)));\n};","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/reducers/reducers.js"],"names":["SET_TASKS","SET_USERS","setUsers","setTasks","errUsers","usersReducer","state","type","users","tasksReducer","tasks","loadUsers","dispatch","fetch","then","res","json","catch","err","loadTasks","saveTask","task","method","headers","body","JSON","stringify","changePriority","id","nameAction","removeTask"],"mappings":"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","sourcesContent":["import {SET_TASKS, SET_USERS} from '../../constants';\r\nimport {setUsers, setTasks, errUsers} from '../actions/actionCreator';\r\n\r\nexport const usersReducer = (state = {}, {type, users}) => {\r\n  switch (type) {\r\n    case SET_USERS: \r\n      return users;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const tasksReducer = (state = [], { type, tasks }) => {\r\n  switch (type) {\r\n    case SET_TASKS:\r\n      return tasks\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loadUsers = () => async (dispatch) => {\r\n  await fetch(\"/api/users\")\r\n  .then(res => res.json())\r\n  .then(users => dispatch(setUsers(users)))\r\n  .catch(err => dispatch(errUsers(err)));\r\n} \r\n\r\nexport const loadTasks = () => async (dispatch) => {\r\n  const tasks = await fetch(\"/api/tasks\").then(res => res.json())\r\n  dispatch(setTasks(tasks))\r\n}\r\n\r\nexport const saveTask = (task) => async (dispatch) => {\r\n  await fetch(\"/api/tasks\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(task)\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => dispatch(setTasks(res)))\r\n}\r\n\r\nexport const changePriority = (id, nameAction) => async (dispatch) => {\r\n  await fetch(`/api/tasks/${id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({nameAction})\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => dispatch(setTasks(res)))\r\n}\r\n\r\nexport const removeTask = (id) => async (dispatch) => {\r\n  await fetch(`/api/tasks/${id}`, {\r\n    method: \"DELETE\",\r\n  })\r\n  .then(res => res.json())\r\n  .then(res => dispatch(setTasks(res)))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}