{"ast":null,"code":"import { SET_TASKS, SET_USERS, ADD_TASK } from '../../constants';\nimport { setUsers, setTasks } from '../actions/actionCreator';\nconst initialStateUsers = [];\nexport const usersReducer = (state = initialStateUsers, {\n  type,\n  users\n}) => {\n  switch (type) {\n    case SET_USERS:\n      return users;\n\n    default:\n      return state;\n  }\n};\nexport const loadUsers = () => async dispatch => {\n  const users = await fetch(\"/api/users\").then(response => respose.json());\n  dispatch(setUsers(users));\n};\nexport const tasksReducer = (state = [], {\n  type,\n  tasks\n}) => {\n  switch (type) {\n    case SET_TASKS:\n      return { ...state,\n        tasks\n      };\n\n    default:\n      return state;\n  }\n};\nexport const loadTasks = () => async dispatch => {\n  const tasks = await fetch(\"/api/tasks\").then(res => res.json());\n  dispatch(setTasks(tasks));\n};","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/reducers/reducers.js"],"names":["SET_TASKS","SET_USERS","ADD_TASK","setUsers","setTasks","initialStateUsers","usersReducer","state","type","users","loadUsers","dispatch","fetch","then","response","respose","json","tasksReducer","tasks","loadTasks","res"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,iBAA7C;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,0BAAjC;AAEA,MAAMC,iBAAiB,GAAG,EAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGF,iBAAT,EAA4B;AAACG,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAA5B,KAA8C;AACxE,UAAQD,IAAR;AACE,SAAKP,SAAL;AACE,aAAOQ,KAAP;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMG,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,QAAMF,KAAK,GAAG,MAAMG,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAAyBC,QAAQ,IAAIC,OAAO,CAACC,IAAR,EAArC,CAApB;AACAL,EAAAA,QAAQ,CAACR,QAAQ,CAACM,KAAD,CAAT,CAAR;AACD,CAHM;AAKP,OAAO,MAAMQ,YAAY,GAAG,CAACV,KAAK,GAAG,EAAT,EAAa;AAAEC,EAAAA,IAAF;AAAQU,EAAAA;AAAR,CAAb,KAAiC;AAC3D,UAAQV,IAAR;AACE,SAAKR,SAAL;AACE,aAAO,EAAC,GAAGO,KAAJ;AAAWW,QAAAA;AAAX,OAAP;;AACF;AACE,aAAOX,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMY,SAAS,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACjD,QAAMO,KAAK,GAAG,MAAMN,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAAyBO,GAAG,IAAIA,GAAG,CAACJ,IAAJ,EAAhC,CAApB;AACAL,EAAAA,QAAQ,CAACP,QAAQ,CAACc,KAAD,CAAT,CAAR;AACD,CAHM","sourcesContent":["import {SET_TASKS, SET_USERS, ADD_TASK} from '../../constants';\r\nimport {setUsers, setTasks} from '../actions/actionCreator';\r\n\r\nconst initialStateUsers = [];\r\n\r\nexport const usersReducer = (state = initialStateUsers, {type, users}) => {\r\n  switch (type) {\r\n    case SET_USERS: \r\n      return users;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loadUsers = () => async (dispatch) => {\r\n  const users = await fetch(\"/api/users\").then(response => respose.json());\r\n  dispatch(setUsers(users))\r\n} \r\n\r\nexport const tasksReducer = (state = [], { type, tasks }) => {\r\n  switch (type) {\r\n    case SET_TASKS :\r\n      return {...state, tasks}\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loadTasks = () => async (dispatch) => {\r\n  const tasks = await fetch(\"/api/tasks\").then(res => res.json());\r\n  dispatch(setTasks(tasks))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}