{"ast":null,"code":"import{createStore,compose,applyMiddleware}from'redux';import rootReducer from'./reducers/index';import{save}from'redux-localstorage-simple';/* eslint-disable no-underscore-dangle */var composeEnhancers=process.env.NODE_ENV!=='production'&&typeof window==='object'&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE({}):compose;/* eslint-enable */var configureStore=function configureStore(preloadedState){return createStore(rootReducer,preloadedState,composeEnhancers(applyMiddleware(save({namespace:'todo-list'}))));};var store=configureStore({});export default store;","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/store.js"],"names":["createStore","compose","applyMiddleware","rootReducer","save","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE","configureStore","preloadedState","namespace","store"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,OAArB,CAA8BC,eAA9B,KAAqD,OAArD,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,OAAQC,IAAR,KAAmB,2BAAnB,CAEA,yCACA,GAAMC,CAAAA,gBAAgB,CACtBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,EACA,MAAOC,CAAAA,MAAP,GAAkB,QADlB,EAEAA,MAAM,CAACC,kCAFP,CAGED,MAAM,CAACC,kCAAP,CAA0C,EAA1C,CAHF,CAGkDT,OAJlD,CAKA,mBAEA,GAAMU,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,cAAc,QACnCZ,CAAAA,WAAW,CACTG,WADS,CAETS,cAFS,CAGTP,gBAAgB,CACdH,eAAe,CAACE,IAAI,CAAC,CAACS,SAAS,CAAE,WAAZ,CAAD,CAAL,CADD,CAHP,CADwB,EAArC,CAUA,GAAMC,CAAAA,KAAK,CAAGH,cAAc,CAAC,EAAD,CAA5B,CAEA,cAAeG,CAAAA,KAAf","sourcesContent":["import {createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport {save} from 'redux-localstorage-simple';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers =\r\nprocess.env.NODE_ENV !== 'production' &&\r\ntypeof window === 'object' &&\r\nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE ?\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = preloadedState => (\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(\r\n      applyMiddleware(save({namespace: 'todo-list'}))\r\n    ),\r\n  )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}