{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grechka_Mi\\\\Documents\\\\react-express-example-master\\\\frontend\\\\src\\\\TodoApp\\\\containers\\\\todoBody.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { usersFetchData, removeTask, addTask, increasePriority, decreasePriority } from '../actions/actionCreator';\nimport TodoInput from '../components/todoInput/todoInput';\nimport TodoList from '../components/todoList/todoList';\nimport AppTitle from '../components/appTitle/appTitle';\nimport classes from './todoBody_style';\n\nclass TodoBody extends Component {\n  componentDidMount() {\n    this.props.fetchData('/api/tasks');\n  }\n\n  render() {\n    const {\n      tasks,\n      addTaskAction,\n      removeTaskAction,\n      increasePriorityAction,\n      decreasePriorityAction\n    } = this.props;\n    const isTasksExist = tasks && tasks.length > 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.todoBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppTitle, {\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TodoInput, {\n      addTask: addTaskAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), isTasksExist && /*#__PURE__*/React.createElement(TodoList, {\n      decreasePriority: decreasePriorityAction,\n      increasePriority: increasePriorityAction,\n      removeTask: removeTaskAction,\n      tasksList: tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  console.log(store); // посмотрим, что же у нас в store?\n\n  return {\n    tasks: store.tasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: url => {\n    dispatch(usersFetchData(url));\n  },\n  addTaskAction: (id, description, executor, priority) => dispatch(addTask(id, description, executor, priority)),\n  removeTaskAction: id => dispatch(removeTask(id)),\n  increasePriorityAction: id => dispatch(increasePriority(id)),\n  decreasePriorityAction: id => dispatch(decreasePriority(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoBody);","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/containers/todoBody.js"],"names":["React","Component","connect","usersFetchData","removeTask","addTask","increasePriority","decreasePriority","TodoInput","TodoList","AppTitle","classes","TodoBody","componentDidMount","props","fetchData","render","tasks","addTaskAction","removeTaskAction","increasePriorityAction","decreasePriorityAction","isTasksExist","length","todoBody","mapStateToProps","store","console","log","mapDispatchToProps","dispatch","url","id","description","executor","priority"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,OAArC,EAA8CC,gBAA9C,EAAgEC,gBAAhE,QAAuF,0BAAvF;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAE/BY,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWC,SAAX,CAAqB,YAArB;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,aAAT;AAAuBC,MAAAA,gBAAvB;AAA0CC,MAAAA,sBAA1C;AAAkEC,MAAAA;AAAlE,QAA6F,KAAKP,KAAxG;AACA,UAAMQ,YAAY,GAAGL,KAAK,IAAIA,KAAK,CAACM,MAAN,GAAe,CAA7C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAEZ,OAAO,CAACa,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,qEAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEN,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGI,YAAY,iBAAI,oBAAC,QAAD;AACf,MAAA,gBAAgB,EAAED,sBADH;AAEf,MAAA,gBAAgB,EAAED,sBAFH;AAGf,MAAA,UAAU,EAAED,gBAHG;AAIf,MAAA,SAAS,EAAEF,KAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHnB,CADF;AAaD;;AAvB8B;;AAyBjC,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD+B,CACZ;;AACnB,SAAO;AACLT,IAAAA,KAAK,EAAES,KAAK,CAACT;AADR,GAAP;AAGD,CALD;;AAOA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,SAAS,EAAEgB,GAAG,IAAI;AAACD,IAAAA,QAAQ,CAAC3B,cAAc,CAAC4B,GAAD,CAAf,CAAR;AAA8B,GADb;AAEpCb,EAAAA,aAAa,EAAE,CAACc,EAAD,EAAKC,WAAL,EAAkBC,QAAlB,EAA4BC,QAA5B,KAAyCL,QAAQ,CAACzB,OAAO,CAAC2B,EAAD,EAAKC,WAAL,EAAkBC,QAAlB,EAA4BC,QAA5B,CAAR,CAF5B;AAGpChB,EAAAA,gBAAgB,EAAEa,EAAE,IAAIF,QAAQ,CAAC1B,UAAU,CAAC4B,EAAD,CAAX,CAHI;AAIpCZ,EAAAA,sBAAsB,EAAEY,EAAE,IAAIF,QAAQ,CAACxB,gBAAgB,CAAC0B,EAAD,CAAjB,CAJF;AAKpCX,EAAAA,sBAAsB,EAAEW,EAAE,IAAIF,QAAQ,CAACvB,gBAAgB,CAACyB,EAAD,CAAjB;AALF,CAAL,CAAnC;;AAQA,eAAe9B,OAAO,CAACuB,eAAD,EAAmBI,kBAAnB,CAAP,CACbjB,QADa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { usersFetchData, removeTask, addTask, increasePriority, decreasePriority} from '../actions/actionCreator';\r\n\r\nimport TodoInput from '../components/todoInput/todoInput';\r\nimport TodoList from '../components/todoList/todoList';\r\nimport AppTitle from '../components/appTitle/appTitle';\r\n\r\nimport classes from './todoBody_style';\r\n\r\nclass TodoBody extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchData('/api/tasks')\r\n  }\r\n\r\n  render(){\r\n    const { tasks, addTaskAction,removeTaskAction , increasePriorityAction, decreasePriorityAction } = this.props;\r\n    const isTasksExist = tasks && tasks.length > 0;\r\n    \r\n    return (\r\n      <div className={classes.todoBody}>\r\n        <AppTitle title='Список задач' />\r\n        <TodoInput addTask={addTaskAction} />\r\n        {isTasksExist && <TodoList\r\n          decreasePriority={decreasePriorityAction}\r\n          increasePriority={increasePriorityAction}\r\n          removeTask={removeTaskAction}\r\n          tasksList={tasks}\r\n        />}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  console.log(store) // посмотрим, что же у нас в store?\r\n  return {\r\n    tasks: store.tasks,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchData: url => {dispatch(usersFetchData(url))},\r\n    addTaskAction: (id, description, executor, priority) => dispatch(addTask(id, description, executor, priority)),\r\n    removeTaskAction: id => dispatch(removeTask(id)),\r\n    increasePriorityAction: id => dispatch(increasePriority(id)),\r\n    decreasePriorityAction: id => dispatch(decreasePriority(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps\r\n)(TodoBody);"]},"metadata":{},"sourceType":"module"}