{"ast":null,"code":"import { SET_TASKS, SET_USERS, ADD_TASK } from '../../constants';\nimport { setUsers, setTasks } from '../actions/actionCreator';\nexport const usersReducer = (state = [], {\n  type,\n  users\n}) => {\n  switch (type) {\n    case SET_USERS:\n      return users;\n\n    default:\n      return state;\n  }\n};\nexport const loadUsers = () => async dispatch => {\n  const users = await fetch(\"/api/users\").then(res => res.json());\n  dispatch(setUsers(users));\n};\nconst initialStateTask = {\n  tasks: []\n};\nexport const tasksReducer = (state = initialStateTask, {\n  type,\n  tasks,\n  task\n}) => {\n  switch (type) {\n    case ADD_TASK:\n      return { ...state,\n        tasks: [...state.tasks, task]\n      };\n\n    case SET_TASKS:\n      return tasks;\n\n    default:\n      return state;\n  }\n};\nexport const saveTasks = () => async (dispatch, getState) => {\n  const tasks = getState().tasks;\n  await fetch(\"/api/tasks\", {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(tasks)\n  });\n  alert(\"Success\");\n};\nexport const loadTasks = () => async dispatch => {\n  const tasks = await fetch(\"/api/tasks\").then(res => res.json());\n  dispatch(setTasks(tasks));\n};","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/reducers/reducers.js"],"names":["SET_TASKS","SET_USERS","ADD_TASK","setUsers","setTasks","usersReducer","state","type","users","loadUsers","dispatch","fetch","then","res","json","initialStateTask","tasks","tasksReducer","task","saveTasks","getState","method","headers","body","JSON","stringify","alert","loadTasks"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA6C,iBAA7C;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,0BAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAa;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAb,KAA+B;AACzD,UAAQD,IAAR;AACE,SAAKN,SAAL;AACE,aAAOO,KAAP;;AACF;AACE,aAAOF,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMG,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,QAAMF,KAAK,GAAG,MAAMG,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhC,CAApB;AACAJ,EAAAA,QAAQ,CAACP,QAAQ,CAACK,KAAD,CAAT,CAAR;AACD,CAHM;AAKP,MAAMO,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACX,KAAK,GAAGS,gBAAT,EAA2B;AAAER,EAAAA,IAAF;AAAQS,EAAAA,KAAR;AAAeE,EAAAA;AAAf,CAA3B,KAAoD;AAC9E,UAAQX,IAAR;AACE,SAAKL,QAAL;AACE,aAAO,EAAC,GAAGI,KAAJ;AAAWU,QAAAA,KAAK,EAAE,CAAC,GAAGV,KAAK,CAACU,KAAV,EAAiBE,IAAjB;AAAlB,OAAP;;AACF,SAAKlB,SAAL;AACE,aAAOgB,KAAP;;AACF;AACE,aAAOV,KAAP;AANJ;AAQD,CATM;AAWP,OAAO,MAAMa,SAAS,GAAG,MAAM,OAAOT,QAAP,EAAiBU,QAAjB,KAA8B;AAC3D,QAAMJ,KAAK,GAAGI,QAAQ,GAAGJ,KAAzB;AACA,QAAML,KAAK,CAAC,YAAD,EAAe;AACxBU,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFe;AAMxBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,KAAf;AANkB,GAAf,CAAX;AAQAU,EAAAA,KAAK,CAAC,SAAD,CAAL;AACD,CAXM;AAaP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOjB,QAAP,IAAoB;AACjD,QAAMM,KAAK,GAAG,MAAML,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhC,CAApB;AACAJ,EAAAA,QAAQ,CAACN,QAAQ,CAACY,KAAD,CAAT,CAAR;AACD,CAHM","sourcesContent":["import {SET_TASKS, SET_USERS, ADD_TASK} from '../../constants';\r\nimport {setUsers, setTasks} from '../actions/actionCreator';\r\n\r\nexport const usersReducer = (state = [], {type, users}) => {\r\n  switch (type) {\r\n    case SET_USERS: \r\n      return users;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const loadUsers = () => async (dispatch) => {\r\n  const users = await fetch(\"/api/users\").then(res => res.json());\r\n  dispatch(setUsers(users))\r\n}\r\n\r\nconst initialStateTask = {\r\n  tasks: []\r\n}\r\n\r\nexport const tasksReducer = (state = initialStateTask, { type, tasks, task}) => {\r\n  switch (type) {\r\n    case ADD_TASK :\r\n      return {...state, tasks: [...state.tasks, task]}\r\n    case SET_TASKS :\r\n      return tasks\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const saveTasks = () => async (dispatch, getState) => {\r\n  const tasks = getState().tasks;\r\n  await fetch(\"/api/tasks\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(tasks)\r\n  })\r\n  alert(\"Success\")\r\n}\r\n\r\nexport const loadTasks = () => async (dispatch) => {\r\n  const tasks = await fetch(\"/api/tasks\").then(res => res.json())\r\n  dispatch(setTasks(tasks))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}