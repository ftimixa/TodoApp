{"ast":null,"code":"import { USERS_FETCH, ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY } from '../../constants';\nimport { tasks } from '../reducers/tasks';\nexport const addTask = (id, description, executor, priority) => ({\n  type: ADD_TASK,\n  id,\n  description,\n  executor,\n  priority\n});\nexport const removeTask = id => ({\n  type: REMOVE_TASK,\n  id\n});\nexport const increasePriority = id => ({\n  type: INCREASE_PRIORTY,\n  id\n});\nexport const decreasePriority = id => ({\n  type: DECREASE_PRIORITY,\n  id\n});\nexport const tasksFetchSuccess = tasks => ({\n  type: TASKS_FETCH,\n  tasks\n});\nexport const tasksFetchData = url => {\n  return dispatch => {\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.json()).then(tasks => dispatch(tasksFetchSuccess(tasks)));\n  };\n};\nexport const usersFetchSuccess = users => ({\n  type: USERS_FETCH,\n  users\n});\nexport const usersFetchData = url => {\n  return dispatch => {\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response;\n    }).then(response => response.json()).then(users => dispatch(usersFetchSuccess(users)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/actions/actionCreator.js"],"names":["USERS_FETCH","ADD_TASK","REMOVE_TASK","INCREASE_PRIORTY","DECREASE_PRIORITY","tasks","addTask","id","description","executor","priority","type","removeTask","increasePriority","decreasePriority","tasksFetchSuccess","TASKS_FETCH","tasksFetchData","url","dispatch","fetch","then","response","ok","Error","statusText","json","usersFetchSuccess","users","usersFetchData"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,QAArB,EAA+BC,WAA/B,EAA4CC,gBAA5C,EAA8DC,iBAA9D,QAAuF,iBAAvF;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,WAAL,EAAkBC,QAAlB,EAA4BC,QAA5B,MAA0C;AAC/DC,EAAAA,IAAI,EAAEV,QADyD;AAE/DM,EAAAA,EAF+D;AAG/DC,EAAAA,WAH+D;AAI/DC,EAAAA,QAJ+D;AAK/DC,EAAAA;AAL+D,CAA1C,CAAhB;AAQP,OAAO,MAAME,UAAU,GAAGL,EAAE,KAAK;AAC/BI,EAAAA,IAAI,EAAET,WADyB;AAE/BK,EAAAA;AAF+B,CAAL,CAArB;AAKP,OAAO,MAAMM,gBAAgB,GAAGN,EAAE,KAAK;AACrCI,EAAAA,IAAI,EAAER,gBAD+B;AAErCI,EAAAA;AAFqC,CAAL,CAA3B;AAKP,OAAO,MAAMO,gBAAgB,GAAGP,EAAE,KAAK;AACrCI,EAAAA,IAAI,EAAEP,iBAD+B;AAErCG,EAAAA;AAFqC,CAAL,CAA3B;AAKP,OAAO,MAAMQ,iBAAiB,GAAIV,KAAD,KAAY;AAC3CM,EAAAA,IAAI,EAAEK,WADqC;AAE3CX,EAAAA;AAF2C,CAAZ,CAA1B;AAKP,OAAO,MAAMY,cAAc,GAAGC,GAAG,IAAI;AACnC,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACGG,IADH,CACQC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACD;;AACD,aAAOH,QAAP;AACD,KANH,EAOGD,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAPpB,EAQGL,IARH,CAQQhB,KAAK,IAAIc,QAAQ,CAACJ,iBAAiB,CAACV,KAAD,CAAlB,CARzB;AASD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMsB,iBAAiB,GAAIC,KAAD,KAAY;AAC3CjB,EAAAA,IAAI,EAAEX,WADqC;AAE3C4B,EAAAA;AAF2C,CAAZ,CAA1B;AAKP,OAAO,MAAMC,cAAc,GAAGX,GAAG,IAAI;AACnC,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACGG,IADH,CACQC,QAAQ,IAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACD;;AACD,aAAOH,QAAP;AACD,KANH,EAOGD,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAPpB,EAQGL,IARH,CAQQO,KAAK,IAAIT,QAAQ,CAACQ,iBAAiB,CAACC,KAAD,CAAlB,CARzB;AASD,GAVD;AAWD,CAZM","sourcesContent":["import {USERS_FETCH, ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY } from '../../constants';\r\nimport { tasks } from '../reducers/tasks';\r\n\r\nexport const addTask = (id, description, executor, priority) => ({\r\n  type: ADD_TASK,\r\n  id,\r\n  description,\r\n  executor,\r\n  priority\r\n});\r\n\r\nexport const removeTask = id => ({\r\n  type: REMOVE_TASK,\r\n  id\r\n})\r\n\r\nexport const increasePriority = id => ({\r\n  type: INCREASE_PRIORTY,\r\n  id\r\n})\r\n\r\nexport const decreasePriority = id => ({\r\n  type: DECREASE_PRIORITY,\r\n  id\r\n})\r\n\r\nexport const tasksFetchSuccess = (tasks) => ({\r\n  type: TASKS_FETCH,\r\n  tasks\r\n})\r\n\r\nexport const tasksFetchData = url => {\r\n  return (dispatch) => {\r\n    fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText)\r\n        }\r\n        return response;\r\n      })\r\n      .then(response => response.json())\r\n      .then(tasks => dispatch(tasksFetchSuccess(tasks)))\r\n  }\r\n}\r\n\r\nexport const usersFetchSuccess = (users) => ({\r\n  type: USERS_FETCH,\r\n  users\r\n})\r\n\r\nexport const usersFetchData = url => {\r\n  return (dispatch) => {\r\n    fetch(url)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText)\r\n        }\r\n        return response;\r\n      })\r\n      .then(response => response.json())\r\n      .then(users => dispatch(usersFetchSuccess(users)))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}