{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Grechka_Mi\\\\Documents\\\\react-express-example-master\\\\frontend\\\\src\\\\TodoApp\\\\containers\\\\todoBody.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUsers, setTasks, addTask } from '../actions/actionCreator';\nimport TodoInput from '../components/todoInput/todoInput';\nimport TodoList from '../components/todoList/todoList';\nimport AppTitle from '../components/appTitle/appTitle';\nimport classes from './todoBody_style';\n\nconst TodoBody = () => {\n  const users = useSelector(state => state.usersReducer);\n  const tasks = useSelector(state => state.tasksReducer);\n  const dispatch = useDispatch();\n\n  const loadUsers = () => async dispatch => {\n    const users = await fetch(\"/api/users\").then(res => res.json());\n    dispatch(setUsers(users));\n  };\n\n  const loadTasks = () => async dispatch => {\n    const tasks = await fetch(\"/api/tasks\").then(res => res.json());\n    dispatch(setTasks(tasks));\n  };\n\n  const onAddTask = async task => {\n    await fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    dispatch(addTask());\n  };\n\n  useEffect(() => {\n    dispatch(loadTasks());\n    dispatch(loadUsers());\n  }, [dispatch]);\n  const isTasksExist = tasks && tasks.length > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.todoBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppTitle, {\n    title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoInput, {\n    users: users,\n    addTask: onAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), isTasksExist && /*#__PURE__*/React.createElement(TodoList, {\n    tasksList: tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }\n  }));\n};\n\nexport default TodoBody;","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/containers/todoBody.js"],"names":["React","useEffect","useDispatch","useSelector","setUsers","setTasks","addTask","TodoInput","TodoList","AppTitle","classes","TodoBody","users","state","usersReducer","tasks","tasksReducer","dispatch","loadUsers","fetch","then","res","json","loadTasks","onAddTask","task","method","headers","body","JSON","stringify","isTasksExist","length","todoBody"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,OAA5B,QAA0C,0BAA1C;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAErB,QAAMC,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,YAAhB,CAAzB;AACA,QAAMC,KAAK,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,YAAhB,CAAzB;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,SAAS,GAAG,MAAM,MAAOD,QAAP,IAAoB;AAC1C,UAAML,KAAK,GAAG,MAAMO,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhC,CAApB;AACAL,IAAAA,QAAQ,CAACb,QAAQ,CAACQ,KAAD,CAAT,CAAR;AACD,GAHD;;AAKA,QAAMW,SAAS,GAAG,MAAM,MAAON,QAAP,IAAoB;AAC1C,UAAMF,KAAK,GAAG,MAAMI,KAAK,CAAC,YAAD,CAAL,CAAoBC,IAApB,CAAyBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhC,CAApB;AACAL,IAAAA,QAAQ,CAACZ,QAAQ,CAACU,KAAD,CAAT,CAAR;AACD,GAHD;;AAKA,QAAMS,SAAS,GAAG,MAAOC,IAAP,IAAgB;AAC9B,UAAMN,KAAK,CAAC,YAAD,EAAe;AACxBO,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFe;AAMxBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANkB,KAAf,CAAX;AAQAR,IAAAA,QAAQ,CAACX,OAAO,EAAR,CAAR;AACD,GAVH;;AAYAL,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACM,SAAS,EAAV,CAAR;AACAN,IAAAA,QAAQ,CAACC,SAAS,EAAV,CAAR;AACD,GAHQ,EAGN,CAACD,QAAD,CAHM,CAAT;AAKA,QAAMc,YAAY,GAAGhB,KAAK,IAAIA,KAAK,CAACiB,MAAN,GAAe,CAA7C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAACuB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,qEAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAErB,KAAlB;AAAyB,IAAA,OAAO,EAAEY,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGO,YAAY,iBAAI,oBAAC,QAAD;AACf,IAAA,SAAS,EAAEhB,KADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHnB,CADF;AASD,CA7CD;;AA+CA,eAAeJ,QAAf","sourcesContent":["import React,{useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {setUsers, setTasks, addTask} from '../actions/actionCreator';\r\n\r\nimport TodoInput from '../components/todoInput/todoInput';\r\nimport TodoList from '../components/todoList/todoList';\r\nimport AppTitle from '../components/appTitle/appTitle';\r\n\r\nimport classes from './todoBody_style';\r\n\r\nconst TodoBody = () => {\r\n  \r\n  const users = useSelector(state => state.usersReducer);\r\n  const tasks = useSelector(state => state.tasksReducer);\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const loadUsers = () => async (dispatch) => {\r\n    const users = await fetch(\"/api/users\").then(res => res.json());\r\n    dispatch(setUsers(users))\r\n  }\r\n\r\n  const loadTasks = () => async (dispatch) => {\r\n    const tasks = await fetch(\"/api/tasks\").then(res => res.json())\r\n    dispatch(setTasks(tasks))\r\n  }\r\n\r\n  const onAddTask = async (task) => {\r\n      await fetch(\"/api/tasks\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(task)\r\n      })\r\n      dispatch(addTask())\r\n    }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadTasks())\r\n    dispatch(loadUsers())\r\n  }, [dispatch])\r\n\r\n  const isTasksExist = tasks && tasks.length > 0;\r\n    \r\n  return (\r\n    <div className={classes.todoBody}>\r\n      <AppTitle title='Список задач' />\r\n      <TodoInput users={users} addTask={onAddTask} />\r\n      {isTasksExist && <TodoList\r\n        tasksList={tasks}\r\n      />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoBody;"]},"metadata":{},"sourceType":"module"}