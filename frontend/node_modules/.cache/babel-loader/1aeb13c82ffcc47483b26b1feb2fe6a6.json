{"ast":null,"code":"import { GET_TASKS, GET_USERS, ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY } from '../../constants';\nexport const addTak = (id, description, executor, priority) => ({\n  type: ADD_TASK,\n  id,\n  description,\n  executor,\n  priority\n});\nexport const tasksPostData = ({\n  id,\n  description,\n  executor,\n  priority\n}) => {\n  return dispatch => {\n    fetch('/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(addTask)\n    }).then(response => response.json()).then(addTask => dispatch(tasksPostSuccess(addTask)));\n  };\n};\nexport const removeTask = id => ({\n  type: REMOVE_TASK,\n  id\n});\nexport const increasePriority = id => ({\n  type: INCREASE_PRIORTY,\n  id\n});\nexport const decreasePriority = id => ({\n  type: DECREASE_PRIORITY,\n  id\n});\nexport const tasksFetchSuccess = tasks => ({\n  type: GET_TASKS,\n  tasks\n});\nexport const tasksFetchData = url => {\n  return dispatch => {\n    fetch(url).then(response => response.json()).then(tasks => dispatch(tasksFetchSuccess(tasks)));\n  };\n};\nexport const usersFetchSuccess = users => ({\n  type: GET_USERS,\n  users\n});\nexport const usersFetchData = url => {\n  return dispatch => {\n    fetch(url).then(response => response.json()).then(users => dispatch(usersFetchSuccess(users)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/actions/actionCreator.js"],"names":["GET_TASKS","GET_USERS","ADD_TASK","REMOVE_TASK","INCREASE_PRIORTY","DECREASE_PRIORITY","addTak","id","description","executor","priority","type","tasksPostData","dispatch","fetch","method","headers","body","JSON","stringify","addTask","then","response","json","tasksPostSuccess","removeTask","increasePriority","decreasePriority","tasksFetchSuccess","tasks","tasksFetchData","url","usersFetchSuccess","users","usersFetchData"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,WAAxC,EAAqDC,gBAArD,EAAuEC,iBAAvE,QAAgG,iBAAhG;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,EAAD,EAAKC,WAAL,EAAkBC,QAAlB,EAA4BC,QAA5B,MAA0C;AAC9DC,EAAAA,IAAI,EAAET,QADwD;AAE9DK,EAAAA,EAF8D;AAG9DC,EAAAA,WAH8D;AAI9DC,EAAAA,QAJ8D;AAK9DC,EAAAA;AAL8D,CAA1C,CAAf;AAQP,OAAO,MAAME,aAAa,GAAG,CAAC;AAACL,EAAAA,EAAD;AAAKC,EAAAA,WAAL;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA;AAA5B,CAAD,KAA2C;AACtE,SAAQG,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,OAAf;AALY,KAAf,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQD,OAAO,IAAIP,QAAQ,CAACW,gBAAgB,CAACJ,OAAD,CAAjB,CAR3B;AASD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMK,UAAU,GAAGlB,EAAE,KAAK;AAC/BI,EAAAA,IAAI,EAAER,WADyB;AAE/BI,EAAAA;AAF+B,CAAL,CAArB;AAKP,OAAO,MAAMmB,gBAAgB,GAAGnB,EAAE,KAAK;AACrCI,EAAAA,IAAI,EAAEP,gBAD+B;AAErCG,EAAAA;AAFqC,CAAL,CAA3B;AAKP,OAAO,MAAMoB,gBAAgB,GAAGpB,EAAE,KAAK;AACrCI,EAAAA,IAAI,EAAEN,iBAD+B;AAErCE,EAAAA;AAFqC,CAAL,CAA3B;AAKP,OAAO,MAAMqB,iBAAiB,GAAIC,KAAD,KAAY;AAC3ClB,EAAAA,IAAI,EAAEX,SADqC;AAE3C6B,EAAAA;AAF2C,CAAZ,CAA1B;AAKP,OAAO,MAAMC,cAAc,GAAGC,GAAG,IAAI;AACnC,SAAQlB,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACiB,GAAD,CAAL,CACGV,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQQ,KAAK,IAAIhB,QAAQ,CAACe,iBAAiB,CAACC,KAAD,CAAlB,CAFzB;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMG,iBAAiB,GAAIC,KAAD,KAAY;AAC3CtB,EAAAA,IAAI,EAAEV,SADqC;AAE3CgC,EAAAA;AAF2C,CAAZ,CAA1B;AAKP,OAAO,MAAMC,cAAc,GAAGH,GAAG,IAAI;AACnC,SAAQlB,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAACiB,GAAD,CAAL,CACGV,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQY,KAAK,IAAIpB,QAAQ,CAACmB,iBAAiB,CAACC,KAAD,CAAlB,CAFzB;AAGD,GAJD;AAKD,CANM","sourcesContent":["import {GET_TASKS, GET_USERS, ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY } from '../../constants';\r\n\r\nexport const addTak = (id, description, executor, priority) => ({\r\n  type: ADD_TASK,\r\n  id,\r\n  description,\r\n  executor,\r\n  priority\r\n});\r\n\r\nexport const tasksPostData = ({id, description, executor, priority}) => {\r\n  return (dispatch) => {\r\n    fetch('/api/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(addTask)\r\n    })\r\n      .then(response => response.json())\r\n      .then(addTask => dispatch(tasksPostSuccess(addTask)))\r\n  }\r\n}\r\n\r\nexport const removeTask = id => ({\r\n  type: REMOVE_TASK,\r\n  id\r\n})\r\n\r\nexport const increasePriority = id => ({\r\n  type: INCREASE_PRIORTY,\r\n  id\r\n})\r\n\r\nexport const decreasePriority = id => ({\r\n  type: DECREASE_PRIORITY,\r\n  id\r\n})\r\n\r\nexport const tasksFetchSuccess = (tasks) => ({\r\n  type: GET_TASKS,\r\n  tasks\r\n})\r\n\r\nexport const tasksFetchData = url => {\r\n  return (dispatch) => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(tasks => dispatch(tasksFetchSuccess(tasks)))\r\n  }\r\n}\r\n\r\nexport const usersFetchSuccess = (users) => ({\r\n  type: GET_USERS,\r\n  users\r\n})\r\n\r\nexport const usersFetchData = url => {\r\n  return (dispatch) => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(users => dispatch(usersFetchSuccess(users)))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}