{"ast":null,"code":"import { ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY } from '../../constants';\nconst initialState = {\n  id: 1,\n  description: 'gfkghd',\n  executor: 'Исполнитель 1',\n  priority: '1'\n};\n\nconst tasks = (state = initialState, {\n  id,\n  description,\n  executor,\n  priority,\n  type\n}) => {\n  switch (type) {\n    case ADD_TASK:\n      return;\n      [...state], {\n        id,\n        description,\n        executor,\n        priority: +priority\n      };\n\n    case REMOVE_TASK:\n      return [...state].filter(task => task.id !== id);\n\n    case INCREASE_PRIORTY:\n      return [...state].map(task => {\n        if (task.id === id) {\n          task.priority = ++task.priority;\n        }\n\n        return task;\n      });\n\n    case DECREASE_PRIORITY:\n      return [...state].map(task => {\n        if (task.id === id) {\n          task.priority = --task.priority;\n        }\n\n        return task;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["C:/Users/Grechka_Mi/Documents/react-express-example-master/frontend/src/TodoApp/reducers/tasks.js"],"names":["ADD_TASK","REMOVE_TASK","INCREASE_PRIORTY","DECREASE_PRIORITY","initialState","id","description","executor","priority","tasks","state","type","filter","task","map"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,gBAAhC,EAAkDC,iBAAlD,QAA0E,iBAA1E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,EAAE,EAAE,CADa;AAEjBC,EAAAA,WAAW,EAAE,QAFI;AAGjBC,EAAAA,QAAQ,EAAE,eAHO;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;;AAOA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,WAAN;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,QAA7B;AAAuCG,EAAAA;AAAvC,CAAvB,KAAyE;AACrF,UAAQA,IAAR;AACE,SAAKX,QAAL;AACE;AACE,OAAC,GAAGU,KAAJ,GAAW;AACTL,QAAAA,EADS;AAETC,QAAAA,WAFS;AAGTC,QAAAA,QAHS;AAITC,QAAAA,QAAQ,EAAE,CAACA;AAJF,OAAX;;AAMJ,SAAKP,WAAL;AACE,aAAO,CAAC,GAAGS,KAAJ,EAAWE,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAAtC,CAAP;;AACF,SAAKH,gBAAL;AACE,aAAO,CAAC,GAAGQ,KAAJ,EAAWI,GAAX,CAAeD,IAAI,IAAI;AAC5B,YAAGA,IAAI,CAACR,EAAL,KAAYA,EAAf,EAAmB;AACjBQ,UAAAA,IAAI,CAACL,QAAL,GAAgB,EAAEK,IAAI,CAACL,QAAvB;AACD;;AACD,eAAOK,IAAP;AACD,OALM,CAAP;;AAMF,SAAKV,iBAAL;AACE,aAAO,CAAC,GAAGO,KAAJ,EAAWI,GAAX,CAAeD,IAAI,IAAI;AAC5B,YAAGA,IAAI,CAACR,EAAL,KAAYA,EAAf,EAAmB;AACjBQ,UAAAA,IAAI,CAACL,QAAL,GAAgB,EAAEK,IAAI,CAACL,QAAvB;AACD;;AACD,eAAOK,IAAP;AACD,OALM,CAAP;;AAMF;AACE,aAAOH,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,KAAf","sourcesContent":["import { ADD_TASK, REMOVE_TASK, INCREASE_PRIORTY, DECREASE_PRIORITY} from '../../constants';\r\n\r\nconst initialState = {\r\n    id: 1,\r\n    description: 'gfkghd',\r\n    executor: 'Исполнитель 1',\r\n    priority: '1'\r\n}\r\n\r\nconst tasks = (state = initialState, { id, description, executor, priority, type }) => {\r\n  switch (type) {\r\n    case ADD_TASK :\r\n      return \r\n        [...state],{\r\n          id,\r\n          description,\r\n          executor,\r\n          priority: +priority,\r\n        };\r\n    case REMOVE_TASK :\r\n      return [...state].filter(task => task.id !== id);\r\n    case INCREASE_PRIORTY :\r\n      return [...state].map(task => {\r\n        if(task.id === id) {\r\n          task.priority = ++task.priority;\r\n        }\r\n        return task;\r\n      });\r\n    case DECREASE_PRIORITY :\r\n      return [...state].map(task => {\r\n        if(task.id === id) {\r\n          task.priority = --task.priority;\r\n        }\r\n        return task;\r\n      });\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default tasks;\r\n"]},"metadata":{},"sourceType":"module"}